pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-creds')
        IMAGE_NAME = "jachant/yadro"  // –ü–æ–ª–Ω–æ–µ –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker Hub
        BRANCH_NAME = "${env.BRANCH_NAME ?: 'unknown'}".replaceAll('/', '-')
        APP_VERSION = "1.0.0"
    }

   stage('Checkout') {
    steps {
        checkout scm
        script {
            if (!fileExists('YadroRest/Dockerfile')) {  // ‚Üê –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å
                error("‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            }
        }
    }


        stage('Build Docker Image') {
            steps {
                script {
                    // –°–±–æ—Ä–∫–∞ —Å –ø–æ–ª–Ω—ã–º –ø—É—Ç–µ–º Docker Hub
                    docker.build("${IMAGE_NAME}:${BRANCH_NAME}-${APP_VERSION}", '.')
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-creds') {
                        // –ü—É—à –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–≥–∞
                        docker.image("${IMAGE_NAME}:${BRANCH_NAME}-${APP_VERSION}").push()
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ latest –¥–ª—è main/master
                        if (BRANCH_NAME == 'main' || BRANCH_NAME == 'master') {
                            docker.image("${IMAGE_NAME}:${BRANCH_NAME}-${APP_VERSION}")
                                .tag("${IMAGE_NAME}:latest")
                            docker.image("${IMAGE_NAME}:latest").push()
                            echo "üöÄ –û–±—Ä–∞–∑ ${IMAGE_NAME}:latest –æ–±–Ω–æ–≤–ª–µ–Ω"
                        }
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑—ã –ø–æ—Å–ª–µ –ø—É—à–∞
                    sh "docker rmi ${IMAGE_NAME}:${BRANCH_NAME}-${APP_VERSION} || true"
                    if (BRANCH_NAME == 'main' || BRANCH_NAME == 'master') {
                        sh "docker rmi ${IMAGE_NAME}:latest || true"
                    }
                }
            }
        }
    }

    post {
        always {
            sh 'docker logout registry.hub.docker.com || true'
        }
        success {
            echo "‚úÖ –û–±—Ä–∞–∑ ${IMAGE_NAME}:${BRANCH_NAME}-${APP_VERSION} —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!"
        }
        failure {
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–∞"
        }
    }
}