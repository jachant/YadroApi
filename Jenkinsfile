pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-creds')
        IMAGE_NAME = "jachant/yadro"
        APP_VERSION = "1.0.0" // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Dockerfile
                    if (!fileExists('Dockerfile')) {
                        error("‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.")
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // –°–±–æ—Ä–∫–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –≤–µ—Ä—Å–∏–µ–π
                    dockerImage = docker.build(
                        "${IMAGE_NAME}:${env.BRANCH_NAME}-${APP_VERSION}",
                        "--build-arg VERSION=${APP_VERSION} ."
                    )
                }
            }
        }

        stage('Test Image') {
            steps {
                script {
                    // –ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
                    docker.image("${IMAGE_NAME}:${env.BRANCH_NAME}-${APP_VERSION}").inside {
                        sh 'echo "‚úÖ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."'
                    }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-creds') {
                        dockerImage.push()
                        // –¢–µ–≥ 'latest' —Ç–æ–ª—å–∫–æ –¥–ª—è main
                        if (env.BRANCH_NAME == 'main') {
                            dockerImage.push('latest')
                            echo "üöÄ –û–±—Ä–∞–∑ ${IMAGE_NAME}:latest –æ–±–Ω–æ–≤–ª–µ–Ω."
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ –°–±–æ—Ä–∫–∞ ${IMAGE_NAME}:${env.BRANCH_NAME}-${APP_VERSION} —É—Å–ø–µ—à–Ω–∞!"
            // slackSend channel: '#ci-cd', message: "–£—Å–ø–µ—Ö: ${env.BUILD_URL}"
        }
        failure {
            echo "‚ùå –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π."
            // slackSend channel: '#ci-cd', message: "–ü—Ä–æ–≤–∞–ª: ${env.BUILD_URL}"
        }
    }
}